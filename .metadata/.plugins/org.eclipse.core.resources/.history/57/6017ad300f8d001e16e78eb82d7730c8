package com.OrangeHRMApplicationWebPages;

import java.io.IOException;

import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import com.BaseTest.Base_Test;
import com.Utility.Log;

public class Practice extends Base_Test{
	

	Actions keyboard = new Actions(driver);
	
	public Practice()
	{
		PageFactory.initElements(driver, this);
	}
	
	
	
	public void currentURLFunctionality()
	{
		
		String expected_CurrentURL="orangehrm-4.2.0.1";
		
		String actual_CurrentURL=driver.getCurrentUrl();
		Log.info(actual_CurrentURL);
		
		if(actual_CurrentURL.equals(actual_CurrentURL))
		{
			Log.info("The Expected URL Contains Actual URL=Pass");
		}
		else
		{
			Log.info("The Expected URL does NOT Contains Actual URL=Fail");
		}
	
	}

	public void OrangeHRMLoginPageTitle()
	{
		String expected_actual_TitleOfLoginPage="OrangeHRM";
		
		String actual_TitleOfLoginPage=driver.getTitle();
		
		Log.info(actual_TitleOfLoginPage);
		
		if(actual_TitleOfLoginPage.contains(actual_TitleOfLoginPage))
		{
			Log.info("OrangeHRM Login Page Title is contais Expected Title = Pass");
		}
		else
		{
			Log.info("OrangeHRM Login Page Title is does NOT contais Expected Title = Fail");
		}
	}
	
	//<input name="txtUsername" id="txtUsername" type="text">
	@FindBy(id="txtUsername")
	WebElement usernameProperty;
	
	public  void userNameFunctional(String Username)
	{
		usernameProperty.sendKeys(Username);
	}
	
	//<input name="txtPassword" id="txtPassword" autocomplete="off" type="password">
	@FindBy(name="txtPassword")
	WebElement passwordProperty;
	
	public void passwordfunctionality(String password)
	{
		passwordProperty.sendKeys(password);
	}
	
	//<input type="submit" name="Submit" class="button" id="btnLogin" value="LOGIN">
	@FindBy(className="button")
	WebElement loginbuttonProperty;
	
	public void loginclickfunctionality()
	{
		loginbuttonProperty.click();
	}
	
	
	///html/body/div[1]/div[1]/a[1]/img
	
	@FindBy(xpath="/html/body/div[1]/div[1]/a[1]/img")
	WebElement logoProperty;
	
	public void orangeHRMAddEmployeeLogoValidation()
	{
		 boolean flag=logoProperty.isDisplayed();
		 if(flag)
		 {
			 Log.info("OrangeHRM Applicaiton LogIn WebPage Contains Logo - PASS ");
		 }
		 else
		 {
		 Log.info("OrangeHRM Applicaiton LogIn WebPage doesn Contain Logo - Fail ");
		 }
     }
	
	
	
	public void addEmployeeURLFunctionality()
	{
		String expected_CurrentURL="orangehrm-4.2.0.1";
		
		String actual_CurrentURL=driver.getCurrentUrl();
		Log.info(actual_CurrentURL);
		
		if(actual_CurrentURL.equals(actual_CurrentURL))
		{
			Log.info("The Expected URL Contains Actual URL=Pass");
		}
		else
		{
			Log.info("The Expected URL does NOT Contains Actual URL=Fail");
		}
	
	}

	public void OrangeHRMAddEmployeePageTitle()
	{
		String expected_actual_TitleOfLoginPage="OrangeHRM";
		
		String actual_TitleOfLoginPage=driver.getTitle();
		
		Log.info(actual_TitleOfLoginPage);
		
		if(actual_TitleOfLoginPage.contains(actual_TitleOfLoginPage))
		{
			Log.info("OrangeHRM Login Page Title is contais Expected Title = Pass");
		}
		else
		{
			Log.info("OrangeHRM Login Page Title is does NOT contais Expected Title = Fail");
		}
	}

	
	///html/body/div[1]/div[2]/ul
	@FindBy(xpath="/html/body/div[1]/div[2]/ul")
     WebElement headerblock;
	@FindBy(tagName="a")
	WebElement links;
	public void headerblocksFunctionality()
	{
		String linksName=links.getText();
		Log.info(linksName);
	}
	
	
	//<a href="/orangehrm-4.2.0.1/symfony/web/index.php/pim/viewPimModule" id="menu_pim_viewPimModule" class="firstLevelMenu"><b>PIM</b></a>
	@FindBy(id="menu_pim_viewPimModule")
	WebElement pimProperty;
	
	public void pimLinkFunctionality()
	{
		keyboard.moveToElement(pimProperty).build().perform();
	}
	
	////<a href="/orangehrm-4.2.0.1/symfony/web/index.php/pim/addEmployee" id="menu_pim_addEmployee">Add Employee</a>
	@FindBy(id="menu_pim_addEmployee")
	WebElement addemployeeproperty;
	
	public void addEmployeeLinkFunctionality()
	{
		addemployeeproperty.click();
	}
	
	//<input class="formInputText" maxlength="30" type="text" name="firstName" id="firstName">
	@FindBy(id="firstName")
	WebElement firstNameProperty;
	
	//<input class="formInputText" maxlength="30" type="text" name="middleName" id="middleName">
	@FindBy(id="middleName")
	WebElement middleNameProperty;

	//<input class="formInputText" maxlength="30" type="text" name="lastName" id="lastName">
	@FindBy(id="lastName")
	WebElement lastNameProperty;

	@FindBy(id="employeeId")
	WebElement employeeidProperty;
	//<input type="button" class="" id="btnSave" value="Save">
		@FindBy(id="btnSave")
		WebElement saveButtonProperty;
		
	public void  firstNameFunctionality(String firstname,String MiddleName,String lastName) throws IOException, InterruptedException
	{
		firstNameProperty.sendKeys(firstname);
		keyboard.sendKeys(Keys.TAB).build().perform();
		middleNameProperty.sendKeys(MiddleName);
		keyboard.sendKeys(Keys.TAB).build().perform();
		lastNameProperty.sendKeys(lastName);
		
	//<input class="formInputText valid" maxlength="10" type="text" name="employeeId" value="0061" id="employeeId">
	
	
		String employeeId=employeeidProperty.getAttribute("value");
		Log.info(employeeId);
		keyboard.sendKeys(Keys.TAB).build().perform();
		//employeeId.sendKeys(Keys.TAB).build().perform();
	
		//keyboard.sendKeys(Keys.ENTER).build().perform();
		//choosephotoProperty.sendKeys(Keys.ENTER).
		
	////java.lang.Runtime.getRuntime().exec("C:\\Users\\rajalingam\\Desktop\\OrangeHRMApplication\\OHRM-POM\\AutoItScripts\\SuriPOM.exe");
	//Thread.sleep(10000);
	
	keyboard.sendKeys(Keys.TAB).build().perform();
	keyboard.sendKeys(Keys.TAB).build().perform();
	keyboard.sendKeys(Keys.ENTER).build().perform();
		saveButtonProperty.click();
	}
	
	
	
	//<h1>Personal Details</h1>
	///html/body/div[1]/div[3]/div/div[2]/div[1]/h1
	@FindBy(xpath="/html/body/div[1]/div[3]/div/div[1]/div/h1")
    WebElement profilepictureNameProperty;	
	
	public void profilePictureNameFunctionality()
	{
		String expected_PersonalDetailsTesx="Personal Details";
		Log.info(expected_PersonalDetailsTesx);
		String actual_PersonalDetailsText=profilepictureNameProperty.getText();
		Log.info(actual_PersonalDetailsText);
		
		if(actual_PersonalDetailsText.equals(actual_PersonalDetailsText))
		{
			Log.info("Actual Personal Details Page contains Expected Text= Pass");
		}
		else
		{
			Log.info("Actual Personal Details Page does NOT contains Expected Text= Fail");
		}
		
	}
	
	//<div class="head">
  
	@FindBy(className="head")
    WebElement personalDetailsProperty;	
	
	public void personalDetailsFunctionality()
	{
		String expected_PersonalDetailsTesx="Personal Details";
		Log.info(expected_PersonalDetailsTesx);
		String actual_PersonalDetailsText=personalDetailsProperty.getText();
		Log.info(actual_PersonalDetailsText);
		
		if(actual_PersonalDetailsText.equals(actual_PersonalDetailsText))
		{
			Log.info("Actual Personal Details Page contains Expected Text= Pass");
		}
		else
		{
			Log.info("Actual Personal Details Page does NOT contains Expected Text= Fail");
		}
		
	}
	
	//<input value="Akhli" type="text" name="personal[txtEmpFirstName]" class="block default editable" maxlength="30" title="First Name" id="personal_txtEmpFirstName" disabled="disabled">

	
	@FindBy(id="personal_txtEmpFirstName")
	WebElement firstNameDetailsProperty;
	
	public void firstNameDetailsFunctionality()
	{
		String expected_FirstNameDetailsText="Akhil";
		Log.info(expected_FirstNameDetailsText);
		String actual_FirstNameDetailsText=firstNameDetailsProperty.getText();
		Log.info(actual_FirstNameDetailsText);
		
		if(actual_FirstNameDetailsText.equals(expected_FirstNameDetailsText))
		{
		 Log.info("Actual firstName ContIns Expected FirstName = Pass");
		}
		else
		{
			 Log.info("Actual firstName does NOT ContIns Expected FirstName = Fail");
		}
		
		
	}
	
	//<input value="Puligari" type="text" name="personal[txtEmpMiddleName]" class="block default editable" maxlength="30" title="Middle Name" id="personal_txtEmpMiddleName" disabled="disabled">
	@FindBy(id="personal_txtEmpMiddleName")
	WebElement middleNameDetailsPropery;
	
	public void middleNameDetailsFunctionality()
	{
		String expected_middleNameDetailsText="Akhil";
		Log.info(expected_middleNameDetailsText);
		String actual_middleNameDetailsText=middleNameDetailsPropery.getText();
		Log.info(actual_middleNameDetailsText);
		
		if(actual_middleNameDetailsText.equals(expected_middleNameDetailsText))
		{
		 Log.info("Actual middleName ContIns Expected middleName = Pass");
		}
		else
		{
			 Log.info("Actual middleName does NOT ContIns Expected middleName = Fail");
		}
		
	}
	
	
	//<input value="Akhi" type="text" name="personal[txtEmpLastName]" class="block default editable" maxlength="30" title="Last Name" id="personal_txtEmpLastName" disabled="disabled">
	
	@FindBy(id="personal_txtEmpLastName")
WebElement lastNameDetailsPropery;
	
	public void lastNameDetailsFunctionality()
	{
		String expected_lastNameDetailsText="Akhil";
		Log.info(expected_lastNameDetailsText);
		String actual_lastNameDetailsText=middleNameDetailsPropery.getText();
		Log.info(actual_lastNameDetailsText);
		
		if(actual_lastNameDetailsText.equals(expected_lastNameDetailsText))
		{
		 Log.info("Actual lastName ContIns Expected lastName = Pass");
		}
		else
		{
			 Log.info("Actual lastName does NOT ContIns Expected lastName = Fail");
		}
		
	}
	
	
	//<input value="0062" type="text" name="personal[txtEmployeeId]" maxlength="10" class="editable" id="personal_txtEmployeeId" disabled="disabled">
	
	@FindBy(id="personal_txtEmployeeId")
	WebElement employeeidDetailsProperty;
	
	public void employeeIdDetailsFunctionality()
	{
		String expected_EmployeeIdDetails="jdjd";
		Log.info(expected_EmployeeIdDetails);
		String actual_EmployeeIdDetails=employeeidDetailsProperty.getAttribute("value");
		Log.info(actual_EmployeeIdDetails);
	  if(actual_EmployeeIdDetails.equals(actual_EmployeeIdDetails)) 
	   {
		Log.info("Actual Employee ID is Matched With expected ID=Pass");
	   }
	   else
	   {Log.info("Actual Employee ID is NOT Matched With expected ID=Pass");
		
	    }
	
	}
	
	
	//<a href="#" id="welcome" class="panelTrigger">Welcome Admin</a>
	
	@FindBy(id="welcome")
	WebElement welcomeAdminProperty;
	
	public void wecomeAdminFunctionality()
	{
		welcomeAdminProperty.click();
	}
	
	//<a href="/orangehrm-4.2.0.1/symfony/web/index.php/auth/logout">Logout</a>
	
	@FindBy(linkText="Logout")
	WebElement logoutProperty;
	
	public void logoutFunctionality()
	{
		logoutProperty.click();
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	





}
